<?xml version="1.0" encoding="UTF-8"?>
<sy:switchyard xmlns:bean="urn:switchyard-component-bean:config:1.1" xmlns:bpm="urn:switchyard-component-bpm:config:1.1" xmlns:camel="urn:switchyard-component-camel:config:1.1" xmlns:camel_1="urn:switchyard-component-camel-core:config:1.1" xmlns:file="urn:switchyard-component-camel-file:config:1.1" xmlns:http="urn:switchyard-component-http:config:1.1" xmlns:jms="urn:switchyard-component-camel-jms:config:1.1" xmlns:sca="http://docs.oasis-open.org/ns/opencsa/sca/200912" xmlns:soap="urn:switchyard-component-soap:config:1.1" xmlns:sy="urn:switchyard-config:switchyard:1.1" xmlns:transform="urn:switchyard-config:transform:1.1" xmlns:validate="urn:switchyard-config:validate:1.1" name="sy-poc-main" targetNamespace="urn:com.example.switchyard:sy-poc-main:1.0">
  <sca:composite name="sy-poc-main" targetNamespace="urn:com.example.switchyard:sy-poc-main:1.0">
    <sca:service name="IncomingNavision" promote="ProcessMessage/IncomingMessage">
      <sca:interface.wsdl interface="IncomingMessage.wsdl#wsdl.porttype(IncomingMessagePortType)"/>
      <jms:binding.jms name="incomingMessaging">
        <sy:operationSelector operationName="message_request_1_0"/>
        <jms:queue>incomingQueue</jms:queue>
        <jms:connectionFactory>#ConnectionFactory</jms:connectionFactory>
      </jms:binding.jms>
      <sca:extensions>
        <sy:throttling maxRequests="10" timePeriod="1000"/>
      </sca:extensions>
    </sca:service>
    <sca:component name="ProcessMessage">
      <camel:implementation.camel>
        <camel:java class="com.gepardec.sy_poc.main.ProcessMessageRoute"/>
      </camel:implementation.camel>
      <sca:service name="IncomingMessage">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.IncomingMessage"/>
      </sca:service>
      <sca:reference name="TvOutgoing">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.OutgoingMessage"/>
      </sca:reference>
      <sca:reference name="MailOutgoing">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.OutgoingMessage"/>
      </sca:reference>
      <sca:reference name="InternetOutgoing">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.OutgoingMessage"/>
      </sca:reference>
      <sca:reference name="OutgoingResult">
        <sca:interface.wsdl interface="OutgoingResult.wsdl#wsdl.porttype(OutgoingResultPortType)"/>
      </sca:reference>
    </sca:component>
    <sca:reference name="CallIncognito" multiplicity="0..1" promote="ProcessMessage/InternetOutgoing">
      <sca:interface.wsdl interface="OutgoingMessage.wsdl#wsdl.porttype(OutgoingMessagePortType)"/>
      <http:binding.http name="incognitoHttp">
        <http:address>http://localhost:8080/sy-poc-simulation/incognito</http:address>
        <http:method>POST</http:method>
        <http:contentType>text/xml;charset=UTF-8</http:contentType>
        <http:timeout>1000</http:timeout>
      </http:binding.http>
    </sca:reference>
    <sca:reference name="OutgoingResultNavision" multiplicity="0..1" promote="ResultRoute/CallNavision">
      <sca:interface.wsdl interface="OutgoingResult.wsdl#wsdl.porttype(OutgoingResultPortType)"/>
      <jms:binding.jms name="outgoingJMS">
        <jms:queue>resultQueue</jms:queue>
        <jms:connectionFactory>#ConnectionFactory</jms:connectionFactory>
      </jms:binding.jms>
    </sca:reference>
    <sca:service name="BatchSplitter" promote="BatchSplitterRoute/BatchSplitter">
      <sca:interface.java interface="com.gepardec.sy_poc.interfaces.BatchMessage"/>
      <file:binding.file name="BatchFileBinding">
        <file:directory>${sy.poc.batch.dir}</file:directory>
        <file:consume/>
      </file:binding.file>
    </sca:service>
    <sca:component name="BatchSplitterRoute">
      <camel:implementation.camel>
        <camel:java class="com.gepardec.sy_poc.main.BatchSplitterRoute"/>
      </camel:implementation.camel>
      <sca:service name="BatchSplitter">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.BatchMessage"/>
      </sca:service>
      <sca:reference name="SingleMessage">
        <sca:interface.wsdl interface="IncomingMessage.wsdl#wsdl.porttype(IncomingMessagePortType)"/>
      </sca:reference>
    </sca:component>
    <sca:reference name="SingleMessage" multiplicity="0..1" promote="BatchSplitterRoute/SingleMessage">
      <sca:interface.wsdl interface="IncomingMessage.wsdl#wsdl.porttype(IncomingMessagePortType)"/>
      <jms:binding.jms name="singleProvisionierung">
        <jms:queue>incomingQueue</jms:queue>
        <jms:connectionFactory>#ConnectionFactory</jms:connectionFactory>
      </jms:binding.jms>
    </sca:reference>
    <sca:component name="TvOutgoingRoute">
      <camel:implementation.camel>
        <camel:java class="com.gepardec.sy_poc.main.TvOutgoingRoute"/>
      </camel:implementation.camel>
      <sca:service name="TvOutgoing">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.OutgoingMessage"/>
      </sca:service>
      <sca:reference name="ConaxService">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.ConaxService"/>
      </sca:reference>
    </sca:component>
    <sca:reference name="CallMotion" multiplicity="0..1" promote="ProcessMessage/MailOutgoing">
      <sca:interface.java interface="com.gepardec.sy_poc.interfaces.OutgoingMessage"/>
      <camel_1:binding.uri name="callMotion" configURI="exec://motion.sh">
        <camel_1:messageComposer class="com.gepardec.sy_poc.main.CallMotionMessageComposer"/>
      </camel_1:binding.uri>
    </sca:reference>
    <sca:reference name="CallConax" multiplicity="0..1" promote="TvOutgoingRoute/ConaxService">
      <sca:interface.java interface="com.gepardec.sy_poc.interfaces.ConaxService"/>
      <file:binding.file name="conaxInput">
        <file:contextMapper includes="CamelFileName"/>
        <file:directory>${sy.poc.conax.dir}/input</file:directory>
        <file:produce/>
      </file:binding.file>
    </sca:reference>
    <sca:service name="ConaxResult" promote="ConaxResultRoute/ConaxResult">
      <sca:interface.java interface="com.gepardec.sy_poc.interfaces.ConaxService"/>
      <file:binding.file name="conaxOk">
        <file:contextMapper includes="CamelFileName"/>
        <file:directory>${sy.poc.conax.dir}/ok</file:directory>
        <file:consume/>
      </file:binding.file>
    </sca:service>
    <sca:component name="ConaxResultRoute">
      <camel:implementation.camel>
        <camel:java class="com.gepardec.sy_poc.main.ConaxResultRoute"/>
      </camel:implementation.camel>
      <sca:service name="ConaxResult">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.ConaxService"/>
      </sca:service>
      <sca:reference name="OutgoingResult">
        <sca:interface.java interface="com.gepardec.sy_poc.interfaces.OutgoingResult"/>
      </sca:reference>
    </sca:component>
    <sca:component name="ResultRoute">
      <camel:implementation.camel>
        <camel:java class="com.gepardec.sy_poc.main.ResultRoute"/>
      </camel:implementation.camel>
      <sca:service name="OutgoingResult">
        <sca:interface.wsdl interface="OutgoingResult.wsdl#wsdl.porttype(OutgoingResultPortType)"/>
      </sca:service>
      <sca:reference name="CallNavision">
        <sca:interface.wsdl interface="OutgoingResult.wsdl#wsdl.porttype(OutgoingResultPortType)"/>
      </sca:reference>
    </sca:component>
  </sca:composite>
  <sy:transforms>
    <transform:transform.java from="{http://www.w3.org/2001/XMLSchema}string" to="java:java.lang.String" class="com.gepardec.sy_poc.main.StringTransformer"/>
    <transform:transform.jaxb from="java:com.gepardec.sy_poc.xml.message_response_1_0.Message" to="{http://gepardec.com/sy_poc/wsdl/outgoing_result}send"/>
    <transform:transform.jaxb from="{http://gepardec.com/sy_poc/wsdl/incoming_message}message_request_1_0" to="java:com.gepardec.sy_poc.xml.message_request_1_0.Message"/>
    <transform:transform.jaxb from="java:com.gepardec.sy_poc.xml.message_request_1_0.Message" to="{http://gepardec.com/sy_poc/wsdl/outgoing_message}message_request_1_0"/>
    <transform:transform.jaxb from="{http://gepardec.com/sy_poc/wsdl/outgoing_message}message_request_1_0Response" to="java:java.lang.String"/>
  </sy:transforms>
  <sy:validates/>
</sy:switchyard>